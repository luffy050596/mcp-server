name: build

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true

    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Run govulncheck
      run: govulncheck ./...

    - name: Install git-chglog
      run: go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest

    - name: Generate CHANGELOG
      run: git-chglog -o CHANGELOG.md

    - name: Install go-licenses
      run: go install github.com/google/go-licenses@latest

    - name: Check Licenses
      run: |
        # check all dependencies licenses
        go-licenses check ./... --allowed_licenses_file=.github/licenses-allowed.json
        # generate detailed license report
        go-licenses report ./... > licenses.txt
        # save license report as build artifact
        echo "# Dependencies Licenses Report" > LICENSE-3RD-PARTY.md
        echo "Generated on $(date)" >> LICENSE-3RD-PARTY.md
        echo "\`\`\`" >> LICENSE-3RD-PARTY.md
        cat licenses.txt >> LICENSE-3RD-PARTY.md
        echo "\`\`\`" >> LICENSE-3RD-PARTY.md

    - name: Upload License Report
      uses: actions/upload-artifact@v3
      with:
        name: license-report
        path: LICENSE-3RD-PARTY.md

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Run coverage
      run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./...

  test:
    strategy:
      matrix:
        go-version: [ '1.20', '1.21', '1.22', '1.23' ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
